#!/usr/bin/env zsh

# このコマンドがなぜか無限にループする場合は ~/.pyenv/shims/openstack が存在していないかチェック
# $ type openstack
# > openstack is /home/$USER/.pyenv/shims/openstack

# このスクリプトは、 PYTHON_VERSION を変更した時に自動でそのバージョンにopenstackコマンドをアップデートしない。
# PYTHON_VERSION を変更したい場合は、 PYTHON_VERSION 変数を書き換えた後に `pyenv virtualenv-delete PYENV_OPENSTACK_VIRTUALENV_NAME` をしてください。

#set -xvue
#set -xvu

PYENV_LOCAL_DIRECTORY='/tmp/openstack'
PYENV_OPENSTACK_VIRTUALENV_NAME='openstack'
PYTHON_VERSION='3.7.1'

# pyenvがインストールされているか確認
if ! type pyenv > /dev/null 2>&1; then
    echo 'pyenv not found'
    exit 1
fi

if ! pyenv virtualenvs > /dev/null 2>&1; then
    echo 'pyenv virtualenv not found'
    exit 1
fi

# PYTHON_VERSION が存在しない場合はインストールする
if ! $(pyenv versions | \grep ${PYTHON_VERSION} > /dev/null 2>&1); then
    CFLAGS=-I/usr/include/openssl-1.0 LDFLAGS=-L/usr/lib64/openssl-1.0 pyenv install -v ${PYTHON_VERSION}
fi

# ${PYENV_OPENSTACK_VIRTUALENV_NAME} のPythonバージョンが
# ${PYTHON_VERSION} と一致しない場合は、
# ${PYENV_OPENSTACK_VIRTUALENV_NAME} を削除する。
#
# PYTHON_VERSION を変更した時のための処理
#
# 現在の ${PYENV_OPENSTACK_VIRTUALENV_NAME}の Pythonのバージョンを取得
_current_openstack_virtualenv_version=$(pyenv versions \
    | \grep ${PYENV_OPENSTACK_VIRTUALENV_NAME} \
    | \grep '/' \
    | awk -F"/" '{ print $1 }' \
    | tr -d ' ')
if [[ ! ${_current_openstack_virtualenv_version} = ${PYTHON_VERSION} ]]; then
    pyenv virtualenv-delete -f ${PYENV_OPENSTACK_VIRTUALENV_NAME}
fi

# ${PYENV_LOCAL_DIRECTORY} がDirectoryか確認
if [[ ! -d ${PYENV_LOCAL_DIRECTORY} ]]; then

    # Directoryの作成を試みる
    # 失敗したらexit(1)する
    mkdir -p ${PYENV_LOCAL_DIRECTORY}
    if [[ $? -ne 0 ]]; then
        echo "Failed: mkdir ${PYENV_LOCAL_DIRECTORY}"
        exit 1
    fi
fi

cd ${PYENV_LOCAL_DIRECTORY}

# openstack virtualenvが存在しない場合はopenstack virtualenvを作成し、
# openstack virtualenvへの切り替えとopenstackclientのインストール
if ! pyenv virtualenvs | \grep ${PYENV_OPENSTACK_VIRTUALENV_NAME} > /dev/null 2>&1; then
    pyenv virtualenv ${PYTHON_VERSION} ${PYENV_OPENSTACK_VIRTUALENV_NAME}
    pyenv local ${PYENV_OPENSTACK_VIRTUALENV_NAME}
    pyenv exec pip install python-openstackclient
fi

# 現在のpyenv localの環境を確認し、${PYENV_OPENSTACK_VIRTUALENV_NAME} ではない場合は切り替える
# TODO: 上のvirtualenvが存在しているかのチェック時にelse側で毎回 `pyenv local openstack`やっちゃっても良いかも
if [[ ! "`pyenv local`" = ${PYENV_OPENSTACK_VIRTUALENV_NAME} ]]; then
    pyenv local ${PYENV_OPENSTACK_VIRTUALENV_NAME}
fi

pyenv exec openstack $@

