# syntastic について
# [vimでpythonのコーディングスタイルを自動でチェック&自動修正する](http://ton-up.net/technote/2013/11/26/vim-python-style-check-and-fix/)

# flake8に移行したので使用しない
#[[plugins]]
#repo     = 'tell-k/vim-autopep8'
#hook_add = '''
#autocmd FileType python noremap <buffer> <F8> :call Autopep8()<CR>
#" 79文字制限をとりあえず200にして解除, -1が使えるかどうかは未検証
#let g:autopep8_max_line_length=200
#'''

[[plugins]]
# TODO: 非lazy化
# Python限定じゃないので別の場所に移しても良さそう
# 他のPluginが依存している
repo     = 'vim-syntastic/syntastic'
#build    = 'sudo pacman -S flake8'
hook_add = '''
    "let g:syntastic_python_checkers = ['pyflakes', 'pep8']
    let g:syntastic_python_checkers = ['flake8']
    let g:syntastic_python_flake8_args="--max-line-length=120"
'''


[[plugins]]
# Djangoを正しくVimで読み込めるようにする
repo  = 'lambdalisue/vim-django-support'
on_ft = ['python', 'python3', 'djangohtml']


[[plugins]]
# virtualenvとdjango問題の解決
# Vimで正しくvirtualenvを処理できるようにする
repo  = 'jmcantrell/vim-virtualenv'
on_ft = ['python', 'python3', 'djangohtml']


[[plugins]]
# jedi-vim python補完・リファクタリング・リファレンス環境 ###
repo     = 'davidhalter/jedi-vim'
build    = 'pip install jedi'
#build    = 'sudo pacman -S python-jedi'
on_ft    = ['python', 'python3', 'djangohtml']
hook_post_source = '''
    " jediにvimの設定を任せると'completeopt+=preview'するので
    " 自動設定機能をOFFにし手動で設定を行う
    let g:jedi#auto_vim_configuration = 0
    " 補完の最初の項目が選択された状態だと使いにくいためオフにする
    let g:jedi#popup_select_first = 0
    " quickrunと被るため大文字に変更
    let g:jedi#rename_command = '<Leader>R'
    " gundoと被るため大文字に変更 (2013-06-24 10:00 追記）
    let g:jedi#goto_command = '<Leader>G'
    " docstringは表示しない
    autocmd FileType python setlocal completeopt-=preview
'''


[[plugins]]
# 補完用設定
repo    = 'lambdalisue/vim-pyenv'
depends = ['/jedi-vim']
on_ft   = ['python', 'python3', 'djangohtml']

