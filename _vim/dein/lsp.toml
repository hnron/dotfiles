[[plugins]]
repo     = 'neoclide/coc.nvim'
#build    = ['pacman -S yarn']
build    =['./install.sh nightly']
rev      = 'release'
hook_add = '''
    let g:coc_global_extensions = [
                \     'coc-actions',
                "\     'coc-browser',
                "\     'coc-calc',
                \     'coc-css',
                \     'coc-docker',
                "\     'coc-explorer',
                \     'coc-git',
                \     'coc-go',
                \     'coc-highlight',
                \     'coc-html',
                \     'coc-json',
                \     'coc-lists',
                \     'coc-markdownlint',
                \     'coc-marketplace',
                \     'coc-pyright',
                " TODO: config https://github.com/neoclide/coc-python
                \     'coc-python',
                \     'coc-rls',
                \     'coc-rust-analyzer',
                \     'coc-sh',
                "\     'coc-snippets',
                \     'coc-spell-checker',
                \     'coc-cspell-dicts',
                "\     'coc-svg',
                \     'coc-tsserver',
                \     'coc-vetur',
                \     'coc-vimlsp',
                \     'coc-xml',
                \     'coc-yaml',
                \     'coc-yank',
                \ ]

    nnoremap <silent> <Leader>: :<C-u>CocList<CR>
    nnoremap <silent> <Leader>; :<C-u>CocList<CR>

    nnoremap <silent> <Leader>h :<C-u>call CocAction('doHover')<CR>
    nnoremap <silent> K         :<C-u>call CocAction('doHover')<CR>

    nnoremap <silent> gj        <Plug>(coc-diagnostic-next)
    nnoremap <silent> gk        <Plug>(coc-diagnostic-prev)
    nnoremap <silent> gl        <Plug>(coc-diagnostic-next-error)
    nnoremap <silent> gh        <Plug>(coc-diagnostic-prev-error)

    nnoremap <silent> gd        <Plug>(coc-definition)
    nnoremap <silent> gn        <Plug>(coc-rename)
    nnoremap <silent> <F2>      <Plug>(coc-rename)
    nnoremap <silent> gf        <Plug>(coc-format)
    vnoremap <silent> gf        <Plug>(coc-format-selected)
    nnoremap <silent> gt        <Plug>(coc-type-definition)
    nnoremap <silent> gr        <Plug>(coc-references)
    nnoremap <silent> gi        <Plug>(coc-implementation)
'''


#[[plugins]]
## <F5>      -> メニュー
## K         -> docを表示
## gd        -> 定義場所にジャンプ
## <F2>      -> リネーム
##
## こっちでも良いかも
## https://github.com/neovim/neovim/pull/10222
## https://github.com/Shougo/deoplete-lsp
##
#repo     = 'autozimu/LanguageClient-neovim'
#build    = ['bash install.sh']
#rev      = 'next'
#hook_add = '''
#    " Required for operations modifying multiple buffers like rename.
#    set hidden
#
#    " Launch gopls when Go files are in use
#    let g:LanguageClient_serverCommands = {
#    \   'go': ['gopls']
#    \ }
#
#    nnoremap <F5> :call LanguageClient_contextMenu()<CR>
#    " Or map each action separately
#    nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
#    nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
#    nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
#'''


#[[plugins]]
#repo        = 'deoplete-plugins/deoplete-go'
#depends     = ['deoplete.nvim']
#build       = 'make'
#hook_source = '''
#    let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
#'''

