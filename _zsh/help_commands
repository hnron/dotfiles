#!/bin/zsh

# h-* commands

alias h-awk='echo "\
awk '\''{print \$1 \" \" \$1 }'\'' a.sh
"'

alias h-lsof='echo "\
# ポートを使用しているプロセスを特定
lsof -i:80
"'

alias h-display-backlight='echo "xrandr --output HDMI1 --brightness 0.5"'
alias h-mount='echo "mount -w -o uid=user,iocharset=utf8 /target /mountPoint"'
alias h-mount1='echo "mount -orw,uid=user,utf8 /target /mountPoint"'
alias h-mount2='echo "mount -t cifs -o username=USER //XXX.XXX.XXX.XXX/FILE /mnt/"'

alias h-pacstrap='echo "pacstrap -i -c -d SERVERDIR base base-devel zsh grml-zsh-config vim git openssh tmux"'
alias h-grep-comment="echo \"grep -v -e '^\s*#' -e '^\s*$' FILE.txt\""
alias h-sed-comment="echo \"cat FILE.txt | sed '/^#/d' | sed '/^$/d'\""

alias h-iptables-nat='echo "iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE"'
alias h-iptables-redirect='echo "iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3000"'
alias h-iptables-redirectip='echo "iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination (IP_ADDR):8000"'
alias h-iptables-portforward='echo "iptables -t nat -A PREROUTING -d OUT_IP -i eth0(OUT_IF) -p tcp --dport 80 -j DNAT --to DIST_IP"'

alias h-mtu='echo "ping -c5 -M do -s 1500 example.com"'

alias h-machinectl-pull-dkr='echo "machinectl pull-dkr --verify=no --dkr-index-url=https://index.docker.io library/os:tag"'

alias h-tcpdump='echo "tcpdump -n -i eth0 -s 0 -w dumpfile.cap [filter]"'
alias h-eth='echo "sudo ln -s /dev/null /etc/udev/rules.d/80-net-setup-link.rules"'

# vim系
alias h-vim-root='echo ":w \!sudo tee % > /dev/null"'
alias h-vim-regexp-br='echo "s/keyword/^M/g | ^M -> ctrl+v ctrl+m"'
alias h-vim-ip-range-insert="echo \":for i in range(1,10) | put ='192.168.0.'.i | endfor'\""
alias h-vim-insert-filename="echo '<C-R>%'"
alias h-vim-del-comment="echo '一致行削除
:%g/^$/d
不一致行削除
:%v/^$/d
空行削除
:g/^$/d'"
alias h-vim-space-1="echo ':%s/ \\+/ /g'"
alias h-vim-clipboard="echo 'copy -> \"+yy'"
alias h-vim-syntax="echo ':set syntax=sshconfig'"
alias h-vim-sort="echo '\
内部のソート

ask
:sort

desk
:sort!

uniq (重複削除)
:sort u

最初にマッチした数字でソート
:sort n

正規表現でマッチした部分でのみ
:sort /\\\a\\\a\\\a/ r

範囲指定
:1,5sort

大文字小文字を区別しない
:sort i

10、16、8進数
:sort n
:sort x
:sort o

20列目の値を基準にソートする。＋10進数でソートの場合
:sort /\\%20c/
:sort n /\\%20c/

---

外部のsort

区切りを「,」として2番目のフィールドでソートする
:%!sort -t, -k 2,2

3番目のフィールドの値を数値として解釈し、かつ、降順でソートする
:%!sort -t, -k 3,3nr

データを空白文字で区切って、2番目のフィールドの値でソートする
:%!sort -b -k 2,2

区切りを「,」として、3番目のフィールドでソートし、同じであれば、4番目のフィールドでソートする
:%!sort -k 3,3n -k 4,4n

https://qiita.com/rohinomiya/items/f6c175e1f7d529cb15f0
https://qiita.com/jofrnpnp42/items/13187d77f3237bc6dcc3
'"

alias h-ubuntu-network-example='
echo "/etc/network/interfaces
auto eth0
iface eth0 inet static
address 192.168.1.10
netmask 255.255.255.0
gateway 192.168.1.254
dns-nameservers 8.8.8.8 8.8.4.4"'

alias h-ssh-update-known_hosts="echo \"ssh-keygen -f ~/.ssh/known_hosts -R 192.168.1.1\""

alias h-docker-list-none="echo 'docker images --quiet --filter=dangling=true'"
alias h-docker-build="echo 'docker build --tag=image-name --no-cache .'"
alias h-docker-none-delete="echo 'docker image ls --filter=dangling=true --quiet | xargs docker image rm'"

alias h-cisco-ssh-legacy-options="echo '-oKexAlgorithms=+diffie-hellman-group1-sha1'"
alias h-cisco-config-reset="echo 'erase startup-config
reload
delete flash:vlan.dat'"

alias h-gif="echo 'ffmpeg -i input.mp4 -an -r 15  -pix_fmt rgb24 -f gif output.gif'"

alias h-git-status-current-dir="echo 'git status | \grep -v \"\.\./\"'"

alias h-zsh-grml-zsh-config="echo '\
wget -O ~/.zshrc http://git.grml.org/f/grml-etc-core/etc/zsh/zshrc
curl -L -o ~/.zshrc http://git.grml.org/f/grml-etc-core/etc/zsh/zshrc\
'"

alias h-netcat="echo '\
# File Sender & Port Listen
tar c * | nc -l -p 12345
# File Receiver
nc 192.168.1.1 12345 | tar -x

# File Sender
tar c * | nc 192.168.103.125 12345
# File Receiver & Port Listen
nc -l -p 12345 | tar

# File Sender
cat target.tar.gz | nc 192.168.14.101 12345
# File Receiver & Port Listen
nc -l -p 12345 > target.tar.gz\
'"

alias h-text-行数指定='echo "\
行数指定でcat的な
sed -n 100,200p FILE.txt"'

alias h-deb-unar="echo 'ar vx foo.deb'"
alias h-aur-url='echo "\
https://aur.archlinux.org/packages/PACKAGE
https://aur.archlinux.org/cgit/aur.git/snapshot/PACKAGE.tar.gz
"'

alias h-pyenv-ssl='echo "\
CFLAGS=-I/usr/include/openssl-1.0 \\
LDFLAGS=-L/usr/lib64/openssl-1.0 \\
pyenv install -v 3.6.5"'

### RFC周り

alias h-rfc-keyword='echo "\
[RFC2119]
MUST       | しなければならない
MUST NOT   | してはならない
REQUIRED   | 必須である, 要求されている
SHALL      | するものとする, することになる
SHALL NOT  | しないものとする, することはない
SHOULD     | すべきである, する必要がある
SHOULD NOT | すべきではない, しないほうがよい
RECOMMENDED| 推奨される
MAY        | してもよい
OPTIONAL   | 任意である, 選択できる

用語周りはここ
[RFC4949]
https://tools.ietf.org/html/rfc4949
"'

### systemd-nspawn
alias h-systemd-nspawn-service='echo "\
systemctl edit systemd-nspawn@NAME.service

Example:
[Service]
ExecStart=
ExecStart=/usr/bin/systemd-nspawn --quiet --keep-unit --boot --link-journal=try-guest --network-veth --bind=/srv/nspawn/share:/share -U --settings=override --machine=%i

Default:
ExecStart=/usr/bin/systemd-nspawn --quiet --keep-unit --boot --link-journal=try-guest --network-veth -U --settings=override --machine=%i

Tips:
--bind で ~/ は使用不可なので、$HOMEを使用する。
\"'

### 設定周り
alias h-journald='echo "\
### tty

1.
\`\`\`/etc/systemd/journald.conf.d/fw-tty12.conf
[Journal]
ForwardToConsole=yes
TTYPath=/dev/tty12
MaxLevelConsole=info
\`\`\`

2.
\`\`\`shell
systemctl restart systemd-journald
\`\`\`

### log
mkdir /var/log/journal
"'

alias h-battery='echo "\
/etc/udev/rules.d/99-lowbat.rules

# Suspend the system when battery level drops to 2% or lower
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"10\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"9\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"8\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"7\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"6\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"5\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"4\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"3\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"2\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"1\", RUN+=\"/usr/bin/systemctl suspend\"
SUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"0\", RUN+=\"/usr/bin/systemctl suspend\"\
"'

### Tmux
alias h-tmux-plugin='echo "\
- prefix + I
  - Installs new plugins from GitHub or any other git repository
  - Refreshes TMUX environment
- prefix + U
  - updates plugin(s)
- prefix + alt + u
  - remove/uninstall plugins not on the plugin list

https://github.com/tmux-plugins/tpm#key-bindings
"'

alias h-tmux-session-save='echo "\
prefix + Ctrl-s - save
prefix + Ctrl-r - restore
"'

alias h-bash='echo "\
あとでかく
set -xveu
"'

alias h-qemu-disk-size-change='echo "\
qemu-img resize guest.qcow2 +5G

modprobe -av nbd
qemu-nbd -c /dev/nbd0 ~/img.qcow2

fdisk /dev/nbd0
> d 1
> n
> Enter...

qemu-nbd --disconnect /dev/nbd0
modprobe -rv nbd

resize2fs /dev/vda1
"'

### ShellScript

alias h-shell-command-exists-check='echo "\
if type COMMAND > /dev/null 2>&1; then
    true
fi

if ! type COMMAND > /dev/null 2>&1; then
    false
fi"'

alias h-shell-is-check='echo "\
if COMMAND > /dev/null 2>&1; then
    true
fi

if ! COMMAND > /dev/null 2>&1; then
    true
fi

Example:
if ! pyenv virtualenvs | \grep openstack > /dev/null 2>&1; then
    echo \"pyenv openstack virtualenv not found\"
fi"'

alias h-shell-test-options='echo "\
あ
と
で
書
く
"'

### End ShellScript

### Ansible

alias h-ansible-one-liner='echo "\
\`\`\`hosts
10.0.0.1
10.0.0.2
10.0.0.3

[all:vars]
ansible_sudo_pass=PASSWORD
\`\`\`

ansible all -i hosts -m apt -a "update_cache=yes upgrade=dist" --become\
"'

alias h-ansible-apt-upgrade='echo "\
# aptitudeが入ってる場合
ansible all -i hosts -m apt -a "update_cache=yes upgrade=yes" --become
# aptitudeが入っていない場合
ansible all -i hosts -m apt -a "update_cache=yes upgrade=dist" --become\
"'

alias h-ansible-ping='echo "\
ansible all -i hosts -m ping\
"'

### End Ansible

### OpenStack

# network
alias h-opst-network-create='echo "\
openstack network create \\
  --provider-physical-network provider \\
  --provider-network-type vlan \\
  --provider-segment 145 \\
  vlan145\

# native vlanを使用する場合
openstack network create \\
  --external \\
  --provider-physical-network provider \\
  --provider-network-type flat \\
  provider_network

openstack network create vlan145

NOTE: --external オプションはprovider networkの場合は必要ない？\
"'


# subnet
alias h-opst-subnet-create='echo "\
openstack subnet create \\
  --network provider_network \\
  --subnet-range 192.168.1.0/24 \\
  --gateway 192.168.1.254 \\
  --dns-nameserver=8.8.8.8 \\
  --dns-nameserver=8.8.4.4 \\
  --dhcp \\
  --allocation-pool start=192.168.1.150,end=192.168.1.199 \\
  provider_subnet\
"'

# port
alias h-opst-port-create='echo "\
openstack port create \\
  --network=provider_network \\
  --fixed-ip ip-address=192.168.1.151 \\
  #--fixed-ip subnet=provider_subnet,ip-address=192.168.1.151 \\
  192-168-1-151

openstack port create \\
  --allowed-address ip-address=0.0.0.0/0 \\
  --network=provider_network \\
  --fixed-ip ip-address=192.168.1.152 \\
  192-168-1-152

openstack port create \\
  --disable-port-security \\
  --network=provider_network \\
  --fixed-ip ip-address=192.168.1.153 \\
  192-168-1-152\
"'

alias h-opst-port-attach='echo "\
nova interface-attach --port-id={UUID} myserver\

openstack server add port SERVER PORT
"'

alias h-opst-port-list-ip-only='echo "\
openstack port list --network=NETWORK --column=\"Fixed IP Addresses\" --format value | sed \"s/'\'', .*//g\" | sed \"s/ip_address='\''//g\" | sort -V\
"'

alias h-opst-floating-ip='echo "\
# provider_networkというexternalネットワークにfloating ipを作成したい場合
openstack floating ip create --floating-ip-address 192.168.1.100 provider_network

# floating ip をインスタンスに割り当てる
openstack server add floating ip instance-01 192.168.1.100
"'


# image
alias h-opst-image-create='echo "openstack image create --file cirros-0.3.5-x86_64-disk.img --disk-format qcow2 --container-format bare --public cirros"'

# flavor
alias h-opst-flavor-create='echo "\
openstack flavor create --public --vcpus 1 --disk 8 --ram 8096 1-8-8096
"'

# keypair
alias h-opst-keypair-create='echo "\
openstack keypair create --public-key ~/.ssh/id_rsa.pub mykey\
"'

# security group
alias h-opst-security-group='echo "\
openstack security group rule create default --protocol icmp
# openstack security group rule create --proto tcp --dst-port 22 default
openstack security group rule create default --protocol tcp --ingress --prefix 0.0.0.0/0 --dst-port 1:65535
openstack security group rule create default --protocol tcp --egress --prefix 0.0.0.0/0 --dst-port 1:65535
openstack security group rule create default --protocol udp --ingress --prefix 0.0.0.0/0 --dst-port 1:65535
openstack security group rule create default --protocol udp --egress --prefix 0.0.0.0/0 --dst-port 1:65535
openstack security group rule list default
"'

# server
alias h-opst-server-create='echo "\
openstack server create \\
  --image archlinux-cloud \\
  --flavor mini \\
  --security-group default \\
  --nic port-id={UUID} \\
  --nic port-id={UUID} \\
  --nic net-id=public_network,v4-fixed-ip=192.168.1.10 \\
  --config-drive true \\
  --key-name KEY_NAME \\
  arch-server\
"'

alias h-opst-server-suspend-resume='echo "openstack server suspend | openstack server resume"'

alias h-opst-server-delete-multi='echo "openstack server list | \\grep 1-192-168 | awk \"{ print \$2 }\" | xargs openstack server delete"'

alias h-opst-server-delete-all='echo "openstack server list -f value | awk \"{ print $1 }\" | xargs openstack server delete"'

alias h-opst-id-save='echo "\
openstack networ list | tee openstack_network_list
openstack server list | tee openstack_server_list
openstack subnet list | tee openstack_subnet_list
openstack port list | tee openstack_port_list
openstack flavor list | tee openstack_flavor_list
openstack host list | tee openstack_host_list\
"'

# console
alias h-opst-console-url-show='echo "\
openstack console url show SERVER\
"'

# quota
alias h-opst-quota-set='echo "\
openstack quota set --cores 50 admin\
"'

# tips

alias h-opst-list='echo "\
openstack hypervisor list

openstack compute service list\
"'

alias h-opst-show='echo "\
openstack host show compute1\
"'

# selfservice
alias h-opst-selfservice='echo "\
openstack network create  --share \\
  --provider-physical-network provider \\
  --provider-network-type flat provider

openstack subnet create --network provider \\
  --allocation-pool start=START_IP_ADDRESS,end=END_IP_ADDRESS \\
  --dns-nameserver DNS_RESOLVER --gateway PROVIDER_NETWORK_GATEWAY \\
  --subnet-range PROVIDER_NETWORK_CIDR provider

openstack network create selfservice

openstack subnet create --network selfservice \\
  --dns-nameserver DNS_RESOLVER --gateway SELFSERVICE_NETWORK_GATEWAY \\
  --subnet-range SELFSERVICE_NETWORK_CIDR selfservice

openstack router create router1

openstack router set router1 --external-gateway provider
openstack router add subnet router1 selfservice

#neutron router-interface-add router1 selfservice
#neutron router-gateway-set router1 provider

# Verify operation
ip netns
neutron router-port-list router1

###
openstack flavor create --id 0 --vcpus 1 --ram 64 --disk 1 m1.nano

ssh-keygen -q -N ""
openstack keypair create --public-key ~/.ssh/id_rsa.pub mykey

openstack security group rule create --proto icmp default
openstack security group rule create --proto tcp --dst-port 22 default
"'

# nested kvm
alias h-nested-kvm='echo "\
$ vi /etc/modprobe.d/kvm-nested.conf
options kvm_intel nested=1

$ modprobe -r kvm_intel

$ modprobe kvm_intel

$ cat /sys/module/kvm_intel/parameters/nested
> Y

$ virsh edit centos7
<cpu mode=\"host-passthrough=\">\
"'

### End OpenStack
